name: CMake

on:
  push:
    branches: [ master ]
    paths-ignore:
      - '.gitignore'
      - 'LICENSE'
      - '.gitmodules'
      - '**.md'
      - '**.py' 
  pull_request:
    branches: [ master ]
    paths-ignore:
      - '.gitignore'
      - 'LICENSE'
      - '.gitmodules'
      - '**.md'
      - '**.py'

#env:
#  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
#  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      matrix:
        include:
         - os: ubuntu-latest
           type: Debug
           cxx: gcc
         - os: ubuntu-latest
           type: Release
           cxx: gcc
           coverage: -DCMAKE_CXX_FLAGS=--coverage
         - os: ubuntu-latest
           type: Debug
           cxx: clang
         - os: ubuntu-latest
           type: Release
           cxx: clang
        #   - os: windows-latest
        #     type: Debug
        #  - os: windows-latest
        #    type: Release
        #  - os: macos-latest
        #    type: Debug
        #  - os: macos-latest
        #    type: Release

    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{matrix.os}}

    defaults:
      run:
        working-directory: ${{github.workspace}}

    steps:
      - uses: actions/checkout@v5

      - name: Checkout submodules
        run: git submodule update --init --recursive

      - name: Install libs
        run: |
          sudo apt-get update
          sudo apt-get install libcurl4-openssl-dev libssl-dev libcaf-dev 

      # - name: build 3rd fmt
      #   run: |
      #     cmake -B ${{github.workspace}}/3rd/fmt/build -DCMAKE_BUILD_TYPE=${{matrix.type}}
      #     cmake --build ${{github.workspace}}/3rd/fmt/build --config ${{matrix.type}}
      #     cd ${{github.workspace}}/3rd/fmt/build
      #     make
      #   working-directory: ${{github.workspace}}/3rd/fmt/

      - name: build CAF
        run: |
          git clone https://github.com/actor-framework/actor-framework
          cd actor-framework
          ./configure
          make -C build
          sudo make -C build install

      - name: build oat++
        run: |
          git clone https://github.com/oatpp/oatpp.git
          cd oatpp/
          mkdir build && cd build
          cmake ..
          sudo make && sudo make install

      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.type}}

      - name: Build
        # Build your program with the given configuration
        run: cmake --build ${{github.workspace}}/build --config ${{matrix.type}}

      - name: Test
        working-directory: ${{github.workspace}}/build
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ctest -C ${{matrix.type}}

